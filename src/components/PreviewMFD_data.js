//participation
export const d0 = [
  [5.05, 0.0],
  [5.15, 0.0],
  [5.25, 0.0],
  [5.35, 0.0],
  [5.45, 0.0],
  [5.55, 0.0],
  [5.65, 0.0],
  [5.75, 0.0],
  [5.85, 0.0],
  [5.95, 0.0],
  [6.05, 0.0],
  [6.15, 0.0],
  [6.25, 2.1418539e-6],
  [6.35, 7.2610014e-8],
  [6.45, 9.059606e-7],
  [6.55, 0.0],
  [6.65, 4.5084775e-7],
  [6.75, 1.5538296e-7],
  [6.85, 1.319428e-6],
  [6.95, 1.5456251e-6],
  [7.05, 3.6339463e-7],
  [7.15, 3.9578545e-6],
  [7.25, 7.948189e-5],
  [7.35, 2.1438321e-4],
  [7.45, 3.147912e-4],
  [7.55, 2.2818036e-4],
  [7.65, 6.539962e-4],
  [7.75, 5.0817494e-4],
  [7.85, 1.1729178e-4],
  [7.95, 1.077012e-4],
  [8.05, 1.3105728e-5],
  [8.15, 8.235769e-7],
  [8.25, 0.0],
  [8.35, 0.0],
  [8.45, 0.0],
  [8.55, 0.0],
  [8.65, 0.0],
  [8.75, 0.0],
  [8.85, 0.0],
  [8.95, 0.0],
  [9.05, 0.0],
];

//subSeismoMFD
export const d1 = [
  [0.05, 412.82632],
  [0.15, 327.9196],
  [0.25, 260.4758],
  [0.35, 206.90327],
  [0.45, 164.34912],
  [0.55, 130.54715],
  [0.65, 103.69728],
  [0.75, 82.36968],
  [0.85, 65.42856],
  [0.95, 51.971756],
  [1.05, 41.28263],
  [1.15, 32.79196],
  [1.25, 26.047579],
  [1.35, 20.690329],
  [1.45, 16.434912],
  [1.55, 13.054714],
  [1.65, 10.369728],
  [1.75, 8.236968],
  [1.85, 6.542856],
  [1.95, 5.1971755],
  [2.05, 4.128263],
  [2.15, 3.279196],
  [2.25, 2.604758],
  [2.35, 2.069033],
  [2.45, 1.6434911],
  [2.55, 1.3054714],
  [2.65, 1.0369729],
  [2.75, 0.8236968],
  [2.85, 0.6542856],
  [2.95, 0.5197175],
  [3.05, 0.41282633],
  [3.15, 0.3279196],
  [3.25, 0.26047578],
  [3.35, 0.20690328],
  [3.45, 0.16434912],
  [3.55, 0.13054715],
  [3.65, 0.103697285],
  [3.75, 0.08236968],
  [3.85, 0.06542856],
  [3.95, 0.051971756],
  [4.05, 0.04128263],
  [4.15, 0.03279196],
  [4.25, 0.02604758],
  [4.35, 0.020690328],
  [4.45, 0.016434912],
  [4.55, 0.013054715],
  [4.65, 0.010369728],
  [4.75, 0.008236968],
  [4.85, 0.0065428563],
  [4.95, 0.0051971753],
  [5.05, 0.0041282633],
  [5.15, 0.003279196],
  [5.25, 0.002604758],
  [5.35, 0.0020690328],
  [5.45, 0.0016434912],
  [5.55, 0.0013054714],
  [5.65, 0.0010369729],
  [5.75, 8.236968e-4],
  [5.85, 6.542856e-4],
  [5.95, 5.197175e-4],
  [6.05, 4.128263e-4],
  [6.15, 2.4214883e-4],
  [6.25, 9.530024e-5],
  [6.35, 0.0],
  [6.45, 0.0],
  [6.55, 0.0],
  [6.65, 0.0],
  [6.75, 0.0],
  [6.85, 0.0],
  [6.95, 0.0],
  [7.05, 0.0],
  [7.15, 0.0],
  [7.25, 0.0],
  [7.35, 0.0],
  [7.45, 0.0],
  [7.55, 0.0],
  [7.65, 0.0],
  [7.75, 0.0],
  [7.85, 0.0],
  [7.95, 0.0],
  [8.05, 0.0],
  [8.15, 0.0],
  [8.25, 0.0],
  [8.35, 0.0],
  [8.45, 0.0],
  [8.55, 0.0],
  [8.65, 0.0],
  [8.75, 0.0],
  [8.85, 0.0],
  [8.95, 0.0],
];

// export const onlyMag = (data: number[][]) => {
//   return data.filter((x) => x[0] > 5).map((x) => x[0]);
// };

export const onlyRate = (data: number[][]) => {
  return data.filter((x) => x[0] > 5).map((x) => x[1]);
};

// export const columnarXY = (data: number[][]) => {
//   return [onlyY(data), onlyX(data)];
// };

export const magAndRate = (data: number[][]) => {
  return data.filter((x) => x[0] > 5);
};

export const magRateData = (data: number[][]) => {
  return magAndRate(data).map((mr) => {
    const min = 1e-15; //log scales cannot include 0
    return { mag: mr[0], rate: Math.max(mr[1], min) };
    // const rate = (mr[1] === 0.0) ? NaN : mr[1];
    // return { mag: mr[0], rate: rate};
  });
};
